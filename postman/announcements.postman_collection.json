{
	"info": {
		"_postman_id": "b39fd305-94e8-4f13-8773-293de480e7de",
		"name": "announcements",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create new announcement",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a51ac543-7232-4472-a8b7-e7015f5447a3",
						"exec": [
							"const token = pm.environment.get(\"TOKEN\");",
							"",
							"",
							"pm.test(\"Access token is not empty\", function () {",
							"  pm.expect(token).exist;",
							"});",
							"",
							"",
							"pm.test(\"Status code is 201 (Created)\", function () {",
							"  pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"ok\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"My title\",\n  \"description\": \"Some description\"\n}"
				},
				"url": {
					"raw": "{{HOST}}/announcements",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"announcements"
					]
				}
			},
			"response": []
		},
		{
			"name": "Announcements list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "aecf2272-e2e7-4aae-a82b-b1a00034f6c8",
						"exec": [
							"const token = pm.environment.get(\"TOKEN\");",
							"",
							"",
							"pm.test(\"Access token is not empty\", function () {",
							"  pm.expect(token).exist;",
							"});",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"const jsonData = pm.response.json();",
							"",
							"",
							"",
							"pm.test(\"Response is array\", function () {",
							"    pm.expect(jsonData).to.be.an('array');",
							"});",
							"",
							"",
							"pm.test(\"Check required keys in response\", function () {",
							"   if (jsonData.length) {",
							"       const firstRecord = jsonData[0];",
							"       pm.expect(firstRecord.title).to.be.an('string').that.is.not.empty;",
							"       pm.expect(firstRecord.description).to.be.an('string').that.is.not.empty;",
							"       pm.expect(firstRecord.date).to.be.an('string').that.is.not.empty;",
							"   }",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{HOST}}/announcements",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"announcements"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get auth token",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4c38aaf2-f512-4246-a854-8097eedb6838",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"const jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Token is not empty string\", function () {",
							"    pm.expect(jsonData.token).to.be.an('string').that.is.not.empty;",
							"});",
							"",
							"",
							"",
							"pm.test(\"Token is only one key in response\", function () {",
							"    pm.expect(Array.from(Object.keys(jsonData))).to.eql(['token']);",
							"});",
							"",
							"",
							"",
							"// set token env variable",
							"pm.environment.set('TOKEN', jsonData.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"title\": \"My title\",\n  \"description\": \"Some description\"\n}"
				},
				"url": {
					"raw": "{{HOST}}/auth",
					"host": [
						"{{HOST}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{TOKEN}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "05d23ecc-d833-4d13-b6c2-c7914dcc431c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a535e8c0-2335-46b9-ae48-2803517f74ba",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}